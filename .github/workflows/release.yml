name: Release

# Workflow nur für Release-Events ausführen (nur releasenodes veröffentlichen)
on:
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Install Dependencies
        run: |
          if [ -f package.json ]; then
            npm ci
          else
            echo "Keine package.json gefunden - Repository noch nicht für Publishing konfiguriert"
          fi

      - name: Build
        run: |
          if [ -f package.json ] && npm run build --if-present; then
            echo "Build erfolgreich"
          else
            echo "Kein Build-Script vorhanden oder Build nicht erforderlich"
          fi

      - name: Publish to NPM
        run: |
          if [ -f package.json ]; then
            npm publish
          else
            echo "Publishing übersprungen - keine package.json vorhanden"
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Release Artifact
        run: |
          # Erstelle ein Archiv für Release-Artefakte
          tar -czf geb-udedoc-${{ github.event.release.tag_name }}.tar.gz \
            --exclude='.git' \
            --exclude='node_modules' \
            --exclude='.github' \
            .
          
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./geb-udedoc-${{ github.event.release.tag_name }}.tar.gz
          asset_name: geb-udedoc-${{ github.event.release.tag_name }}.tar.gz
          asset_content_type: application/gzip